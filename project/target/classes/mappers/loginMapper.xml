<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.dongyang.project.loginMapper">
	<select id="selectManager" resultType="com.dongyang.project.domain.LoginVO">
		select * from MANAGER_MASTER where 1=1 and MID = #{mid}
	</select>
	<select id="insertManager" resultType="com.dongyang.project.domain.LoginVO">
		insert into MANAGER_MASTER(SITE_TID,MID,MPW,NAME,CREATE_DATE) VALUES(#{site_tid},#{mid},#{mpw},#{name},#{create_date})
	</select>
	<select id="insertImageManager" resultType="com.dongyang.project.domain.ImageVO">
		insert into ImageEntity(content,fileName,mimeType) VALUES(#{content},#{fileName},#{mimeType})
	</select>
	<select id="selectProduct" resultType="com.dongyang.project.domain.ProductVO">
		<choose>
		    <when test="'' != _parameter">
		    	select * from PRODUCT_LIST where 1=1 and SITE_TID = #{_parameter}
		    </when>
		    <otherwise>
		    	select *, (select name from SITE where 1=1 and TID = SITE_TID) SITE_NAME from PRODUCT_LIST where 1=1
		    </otherwise>
	  	</choose>
	</select>
	<select id="searchProduct" parameterType="hashmap" resultType="com.dongyang.project.domain.ProductVO">
		<choose>
			  <when test="'' != site">
			  	select * from PRODUCT_LIST where 1=1 and SITE_TID = #{site}
			  </when>
			  <otherwise>
			  	select *, (select name from SITE where 1=1 and TID = SITE_TID) SITE_NAME from PRODUCT_LIST where 1=1
			  </otherwise>
		</choose>
  	  <choose>
	    <when test="keyword != null and type != null and type.equals('ALL')">
	    	AND NAME = #{keyword} OR BARCODE = #{keyword}
	    </when>
	    <when test="keyword != null and type != null and type.equals('NAME')">
	    	AND NAME = #{keyword}
	    </when>
	    <otherwise>
	    	AND BARCODE = #{keyword}
	    </otherwise>
	  </choose>
	</select>
	<select id="selectImage" resultType="com.dongyang.project.domain.ImageVO">
		select * from ImageEntity where 1=1 and id = #{id}
	</select>
	<select id="nextTidManager" resultType="com.dongyang.project.domain.ProductVO">
		select IFNULL(max(TID)+1,1) as TID from PRODUCT_LIST
	</select>
	<select id="insertPro" resultType="com.dongyang.project.domain.ProductVO">
		insert into PRODUCT_LIST(SITE_TID,IMAGE_ID,NAME,PRICE,COUNT,BARCODE,CREATE_DATE) VALUES('1',(select max(id) from ImageEntity),#{name},#{price},#{count},#{barcode},#{create_date})
	</select>
	<select id="selectProductInfo" resultType="com.dongyang.project.domain.ProductVO">
		select * from PRODUCT_LIST where 1=1 and BARCODE = #{barcode}
	</select>
	<select id="selectProductInfoMap" resultType="com.dongyang.project.domain.ProductVO">
		select * from PRODUCT_LIST where 1=1 and site_tid = #{site} and BARCODE = #{code}
	</select>	
	<select id="updateProductIn" resultType="com.dongyang.project.domain.ProductVO">
		update PRODUCT_LIST set count = count + #{count} where 1=1 and BARCODE = #{barcode}
	</select>
	<select id="updateProductOut" resultType="com.dongyang.project.domain.ProductVO">
		update PRODUCT_LIST set count = count - #{count} where 1=1 and BARCODE = #{barcode}
	</select>
	<select id="selectOrder" resultType="com.dongyang.project.domain.OrderVO">
		select *, (select name from SITE where 1=1 and TID = ORDER_SITE) SITE_NAME from ORDER_LIST where 1=1
		<if test="null != _parameter">
			and SITE_TID = #{_parameter}
		</if>
	</select>
	<select id="selectReturn" resultType="com.dongyang.project.domain.ReturnVO">
		select *, (select name from SITE where 1=1 and TID = SITE_TID) SITE_NAME from RETURN_LIST where 1=1
		<if test="null != _parameter and _parameter != 1">
			and SITE_TID = #{_parameter}
		</if>
	</select>
	<select id="insertOrder" resultType="com.dongyang.project.domain.OrderVO">
		insert into ORDER_LIST(SITE_TID, ORDER_SITE, PRODUCT_NAME, PRODUCT_CODE, COUNT, DESCRIPTION, CREATE_DATE, PRODUCT_TID) 
		VALUES(#{site},#{orderSite},#{orderName},#{orderCode},#{orderCount},#{orderDesc},#{date},#{productTid})
	</select>
	<select id="insertReturn" resultType="com.dongyang.project.domain.ReturnVO">
		insert into RETURN_LIST(SITE_TID, PRODUCT_NAME, PRODUCT_CODE, COUNT, DESCRIPTION, CREATE_DATE, PRODUCT_TID) 
		VALUES(#{site},#{returnName},#{returnCode},#{returnCount},#{returnReason},#{date},#{productTid})
	</select>
	<select id="selectCommunity" resultType="com.dongyang.project.domain.CommunityVO">
		select *, (SELECT NAME FROM MANAGER_MASTER WHERE 1=1 AND TID = USER_MASTER_TID) USER_NAME from COMMUNITY order by CREATE_DATE DESC
	</select>
	<select id="insertCommunity" resultType="com.dongyang.project.domain.CommunityVO">
		insert into COMMUNITY(SITE_TID, USER_MASTER_TID, TITLE, CONTENTS, CREATE_DATE) 
		VALUES(#{site},#{userTid},#{title},#{contents},#{date})
	</select>
	<select id="selectCommunityBean" resultType="com.dongyang.project.domain.CommunityVO">
		select *, (SELECT NAME FROM MANAGER_MASTER WHERE 1=1 AND TID = USER_MASTER_TID) USER_NAME from COMMUNITY WHERE TID = #{_parameter}
	</select>	
	<select id="deleteCommunity" resultType="com.dongyang.project.domain.CommunityVO">
		delete from COMMUNITY WHERE TID = #{_parameter}
	</select>
	<select id="modifyCommunity" resultType="com.dongyang.project.domain.CommunityVO">
		update COMMUNITY set TITLE = #{title}, CONTENTS = #{contents}, MODIFY_DATE = #{date} where 1=1 and TID = #{tid}  
	</select>
	<select id="selectNotice" resultType="com.dongyang.project.domain.NoticeVO">
		select *, (SELECT NAME FROM MANAGER_MASTER WHERE 1=1 AND TID = USER_MASTER_TID) USER_NAME from NOTICE order by CREATE_DATE DESC
	</select>
	<select id="insertNotice" resultType="com.dongyang.project.domain.NoticeVO">
		insert into NOTICE(SITE_TID, USER_MASTER_TID, TITLE, CONTENTS, CREATE_DATE) 
		VALUES(#{site},#{userTid},#{title},#{contents},#{date})
	</select>
	<select id="selectNoticeBean" resultType="com.dongyang.project.domain.NoticeVO">
		select *, (SELECT NAME FROM MANAGER_MASTER WHERE 1=1 AND TID = USER_MASTER_TID) USER_NAME from NOTICE WHERE TID = #{_parameter}
	</select>	
	<select id="deleteNotice" resultType="com.dongyang.project.domain.NoticeVO">
		delete from NOTICE WHERE TID = #{_parameter}
	</select>
	<select id="modifyNotice" resultType="com.dongyang.project.domain.NoticeVO">
		update NOTICE set TITLE = #{title}, CONTENTS = #{contents}, MODIFY_DATE = #{date} where 1=1 and TID = #{tid}  
	</select>
	
	<select id="selectSite" resultType="com.dongyang.project.domain.SiteVO">
		select * from SITE WHERE 1=1
		<if test="null != _parameter">
			and TID != #{_parameter}
		</if>
	</select>
	<select id="selectOrderSite" resultType="com.dongyang.project.domain.OrderVO">
		select *, (select name from SITE where 1=1 and TID = SITE_TID) SITE_NAME from ORDER_LIST where 1=1 and ORDER_SITE = #{site}
  	  <choose>
	    <when test="showValue != null">
	    	AND OUT_YN = #{showValue}
	    </when>
	  </choose>
	</select>
	<select id="updateOrder" resultType="com.dongyang.project.domain.OrderVO">
		update ORDER_LIST set OUT_YN = #{showValue}, OUT_DATE = #{date} where 1=1 and TID = #{tid}  
	</select>
	<select id="selectOrderInput" resultType="com.dongyang.project.domain.OrderVO">
		select *, (select name from SITE where 1=1 and TID = SITE_TID) SITE_NAME from ORDER_LIST where 1=1 and OUT_YN = 'Y'
		<if test="null != site and '' != date">
			and SITE_TID = #{site}
		</if>
		<if test="null != date and '' != date">
	    	and #{date} <![CDATA[<=]]> OUT_DATE
	    	and OUT_DATE <![CDATA[<=]]> #{date2}
		</if>
	</select>
	<select id="insertLog" resultType="com.dongyang.project.domain.InOutVO">
		insert into IN_OUT_STATUS(SITE_TID, PRODUCT_LIST_TID, STATUS, COUNT, CREATE_DATE) 
		VALUES(#{site},#{productTid},#{status},#{count},#{date})
	</select>	
	<select id="selectInOut" resultType="com.dongyang.project.domain.InOutVO">
		select * from (
		select *,
		(select name from PRODUCT_LIST where TID = PRODUCT_LIST_TID) PRODUCT_NAME,
		(select barcode from PRODUCT_LIST where TID = PRODUCT_LIST_TID) PRODUCT_CODE,
		(select price from PRODUCT_LIST where TID = PRODUCT_LIST_TID) PRODUCT_PRICE,
		(select name from SITE where 1=1 and TID = SITE_TID) SITE_NAME
		 from IN_OUT_STATUS WHERE 1=1
		)T
		where 1=1
		<if test="1 != site">
			and SITE_TID = #{site}
		</if>
		<if test="'' != date and null != date">
			and CREATE_DATE >= #{date}
		</if>
		<if test="'' != code and null != code">
			and PRODUCT_CODE = #{code}
		</if>
	</select>
	<select id="selectSaleCount" resultType="java.lang.String">
		select sum(COUNT) from SALE_LIST where 1=1 and site_tid = #{site} and product_list_tid = #{productTid} and status = 'SALE' group by product_list_tid, status
	</select>
	<select id="selectSaleCountReturn" resultType="java.lang.String">
		select sum(COUNT) from SALE_LIST where 1=1 and site_tid = #{site} and product_list_tid = #{productTid} and status = 'RETURN' group by product_list_tid, status
	</select>
	<select id="insertSale" resultType="com.dongyang.project.domain.SaleVO">
		insert into SALE_LIST(SITE_TID, PRODUCT_LIST_TID, STATUS, COUNT, PRICE, CREATE_DATE) 
		VALUES(#{site},#{productTid},#{status},#{count},#{price},#{date})
	</select>
	<select id="updateProduct" resultType="com.dongyang.project.domain.ProductVO">
		update PRODUCT_LIST set 
  	  <choose>
	    <when test="status.equals('RETURN')">
	    	count = count + #{count} 
	    </when>
	    <otherwise>
	    	count = count - #{count}
	    </otherwise>
	  </choose>
	  where 1=1 and site_tid = #{site} and tid = #{productTid}
	</select>
	<select id="selectSaleMoney" resultType="java.lang.String">
		select sum(PRICE) from SALE_LIST where 1=1 and site_tid = #{site} and status = 'SALE' and create_date >= #{today} group by status
	</select>
	<select id="selectSaleReturnMoney" resultType="java.lang.String">
		select sum(PRICE) from SALE_LIST where 1=1 and site_tid = #{site} and status = 'RETURN' and create_date >= #{today} group by status
	</select>
	<select id="selectSaleList" resultType="com.dongyang.project.domain.SaleVO">
		select * from (
		select *,
		(select name from PRODUCT_LIST where TID = PRODUCT_LIST_TID) PRODUCT_NAME,
		(select barcode from PRODUCT_LIST where TID = PRODUCT_LIST_TID) PRODUCT_CODE
		 from SALE_LIST 
		 )T
		 where 1=1 and SITE_TID = #{site}
  	  <choose>
	    <when test="'' != today and null != today">
	    	and #{today} <![CDATA[<=]]> CREATE_DATE
	    	and CREATE_DATE <![CDATA[<=]]> #{last}  
	    </when>
	    <when test="'' != date and null != date">
	    	and #{date} <![CDATA[<=]]> CREATE_DATE
	    	and CREATE_DATE <![CDATA[<=]]> #{date2}
	    </when>	
   	    <when test="'' != code and null != code">
	    	and PRODUCT_CODE = #{code}
	    </when>    
	  </choose>
	  	order by CREATE_DATE desc		
	</select>	
	<select id="searchProductName" resultType="java.lang.String">
	  <choose>
	    <when test="'' != type and null != type and type.equals('NAME') ">
	    	select NAME  
	    </when>
   	    <otherwise>
	    	select TID
	    </otherwise>    
	  </choose>	
		from PRODUCT_LIST where 1=1 and site_tid = #{site} and barcode = #{barcode}
	</select>	
</mapper>